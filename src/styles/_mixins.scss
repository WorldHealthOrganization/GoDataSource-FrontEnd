/* Mixins */
@mixin appearance($appearance) {
  -webkit-appearance: $appearance;
  -moz-appearance: $appearance;
  appearance: $appearance;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

@mixin box-shadow($boxShadow...) {
  -webkit-box-shadow: $boxShadow;
  -moz-box-shadow: $boxShadow;
  box-shadow: $boxShadow;
}

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model;
  -moz-box-sizing: $box-model;
  box-sizing: $box-model;
}

@mixin flex($properties) {
  @if $properties == 'flex' {
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex;
  } @else if $properties == 'inline-flex' {
    display: -ms-inline-flexbox;
    display: -webkit-inline-flex;
    display: inline-flex;
  }
}

@mixin flex_align_content($properties) {
  @if $properties == 'flex-start' {
    -webkit-align-content: flex-start;
    -ms-flex-line-pack: start;
    align-content: flex-start;
  } @else if $properties == 'flex-end' {
    -webkit-align-content: flex-end;
    -ms-flex-line-pack: end;
    align-content: flex-end;
  } @else if $properties == 'center' {
    -webkit-align-content: center;
    -ms-flex-line-pack: center;
    align-content: center;
  } @else if $properties == 'space-between' {
    -webkit-align-content: space-between;
    -ms-flex-line-pack: justify;
    align-content: space-between;
  } @else if $properties == 'space-around' {
    -webkit-align-content: space-around;
    -ms-flex-line-pack: distribute;
    align-content: space-around;
  } @else if $properties == 'stretch' {
    -webkit-align-content: stretch;
    -ms-flex-line-pack: stretch;
    align-content: stretch;
  }
}

@mixin flex_align_items($properties) {
  @if $properties == 'flex-start' {
    -webkit-align-items: flex-start;
    -ms-flex-align: start;
    align-items: flex-start;
  } @else if $properties == 'flex-end' {
    -webkit-align-items: flex-end;
    -ms-flex-align: end;
    align-items: flex-end;
  } @else if $properties == 'center' {
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
  } @else if $properties == 'baseline' {
    -webkit-align-items: baseline;
    -ms-flex-align: baseline;
    align-items: baseline;
  } @else if $properties == 'stretch' {
    -webkit-align-items: stretch;
    -ms-flex-align: stretch;
    align-items: stretch;
  }
}

@mixin flex_direction($properties) {
  -webkit-flex-direction: $properties;
  -ms-flex-direction: $properties;
  flex-direction: $properties;
}

@mixin flex_justify($properties) {
  -webkit-justify-content: $properties;
  -ms-flex-pack: $properties;
  justify-content: $properties;
}

@mixin flex_order($properties) {
  -webkit-order: $properties;
  -ms-flex-order: $properties;
  order: $properties;
}

@mixin flex_val($values) {
  -webkit-box-flex: $values;
  -moz-box-flex: $values;
  -webkit-flex: $values;
  -ms-flex: $values;
  flex: $values;
}

@mixin flex_wrap($properties) {
  @if $properties == 'nowrap' {
    -webkit-flex-wrap: nowrap;
    -ms-flex-wrap: nowrap;
    flex-wrap: nowrap;
  } @else if $properties == 'wrap' {
    -webkit-flex-wrap: wrap;
    -ms-flex-wrap: wrap;
    flex-wrap: wrap;
  } @else if $properties == 'wrap-reverse' {
    -webkit-flex-wrap: wrap-reverse;
    -ms-flex-wrap: wrap-reverse;
    flex-wrap: wrap-reverse;
  }
}

@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity = $opacity-ie);
}

@mixin placeholder {
  @include optional-at-root('::-webkit-input-placeholder') {
    @content;
  }

  @include optional-at-root(':-moz-placeholder') {
    @content;
  }

  @include optional-at-root('::-moz-placeholder') {
    @content;
  }

  @include optional-at-root(':-ms-input-placeholder') {
    @content;
  }
}

@mixin rotate($deg) {
  -webkit-transform: rotate($deg);
  -moz-transform: rotate($deg);
  -ms-transform: rotate($deg);
  -o-transform: rotate($deg);
  transform: rotate($deg);
}

@mixin scale($factor) {
  -webkit-transform: scale($factor);
  -moz-transform: scale($factor);
  -ms-transform: scale($factor);
  -o-transform: scale($factor);
  transform: scale($factor);
}

@mixin selection($color, $background) {
  $prefixes: ("-moz-", "");

  @each $prefix in $prefixes {
    ::#{$prefix}selection {
      color: $color;
      background: $background;
      text-shadow: none;
    }
  }
}

@mixin svg($color) {
  color: $color;
  fill: $color;
}

@mixin transform($string) {
  -webkit-transform: $string;
  -moz-transform: $string;
  -ms-transform: $string;
  -o-transform: $string;
  transform: $string;
}

@mixin transition($transition) {
  -webkit-transition: $transition;
  -moz-transition: $transition;
  -ms-transition: $transition;
  -o-transition: $transition;
  transition: $transition;
}

@mixin translate($x, $y) {
  -webkit-transform: translate($x, $y);
  -moz-transform: translate($x, $y);
  -ms-transform: translate($x, $y);
  -o-transform: translate($x, $y);
  transform: translate($x, $y);
}

@mixin breakpoint($point) {
  @if $point=='xs' {
    @media only screen and (max-width: 767px) {
      @content;
    }
  }

  @else if $point=='gt-xs' {
    @media only screen and (min-width: 768px) {
      @content;
    }
  }

  @else if $point=='sm' {
    @media only screen and (min-width: 768px) and (max-width: 1023px) {
      @content;
    }
  }

  @else if $point=='lt-sm' {
    @media only screen and (max-width: 1023px) {
      @content;
    }
  }

  @else if $point=='gt-sm' {
    @media only screen and (min-width: 1024px) {
      @content;
    }
  }

  @else if $point=='md' {
    @media only screen and (min-width: 1024px) and (max-width: 1199px) {
      @content;
    }
  }

  @else if $point=='lt-md' {
    @media only screen and (max-width: 1199px) {
      @content;
    }
  }

  @else if $point=='gt-md' {
    @media only screen and (min-width: 1200px) {
      @content;
    }
  }

  @else if $point=='lg' {
    @media only screen and (min-width: 1200px) and (max-width: 1599px) {
      @content;
    }
  }

  @else if $point=='lt-lg' {
    @media only screen and (max-width: 1599px) {
      @content;
    }
  }

  @else if $point=='gt-lg' {
    @media only screen and (min-width: 1600px) {
      @content;
    }
  }

  @else if $point=='xl' {
    @media only screen and (min-width: 1600px) and (max-width: 1899px) {
      @content;
    }
  }

  @else if $point=='lt-xl' {
    @media only screen and (max-width: 1899px) {
      @content;
    }
  }

  @else if $point=='gt-xl' {
    @media only screen and (min-width: 1900px) {
      @content;
    }
  }
}
